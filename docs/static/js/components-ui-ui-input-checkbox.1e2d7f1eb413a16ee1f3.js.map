{"version":3,"sources":["/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-checkbox.js","/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-checkbox.mdx"],"names":["StyledLabel","styled","label","UiInputCheckbox","name","checked","loading","disabled","onChange","rest","ref","React","useRef","icon","faMinus","faCheck","faTimes","color","iconColor","state","sendChanges","target","type","as","size","onClick","e","preventDefault","current","blur","onKeyDown","keyCode","aria-pressed","title","outlined","style","paddingLeft","makeShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Playground","Props","log","of","isMDXComponent"],"mappings":"kvBAOMA,EAAcC,IAAOC,MAAV,iFAAGD,CAAH,6BAMJE,EAAkB,SAAC,GAQzB,IAPLC,EAOI,EAPJA,KACAF,EAMI,EANJA,MACAG,EAKI,EALJA,QACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACGC,EACC,0EACEC,EAAMC,IAAMC,SAEZC,EADiC,qBAAZR,EACAS,IAAUT,EAAUU,IAAUC,IACnDC,EAAQZ,EAAU,UAAY,aAC9Ba,EAAYb,EAAU,KAAO,aAC7Bc,EAAQb,EAAU,UAAY,KAE9Bc,EAAc,WACdZ,GACFA,EAAS,CAAEa,OAAQ,CAAEC,KAAM,WAAYlB,OAAMC,SAAUA,MAiB3D,OACE,kBAAC,IAAD,CAAOkB,GAAIvB,GACT,kBAAC,IAAD,eACEU,IAAKA,EACLc,KAAK,QACLL,MAAOA,EACPM,QAnBc,SAAAC,GAClBA,EAAEC,iBACFP,IACAV,EAAIkB,QAAQC,QAiBRC,UAdgB,SAAAJ,GACF,KAAdA,EAAEK,SAAgC,KAAdL,EAAEK,UACxBL,EAAEC,iBACFP,MAYEb,WAAYA,EACZyB,iBAAgB3B,EAChB4B,MAAO/B,GAASE,EAChB8B,UAAQ,EACRjB,MAAOA,GACHR,GAEJ,kBAAC,IAAD,CAAMQ,MAAOC,IACTZ,GAAW,kBAAC,IAAD,CAAiBO,KAAMA,MAGvCX,GAAS,0BAAMiC,MAAO,CAAEC,YAAa,SAAWlC,K,EAtD1CC,E,uUANPH,E,wGAMOG,E,s0BCLPkC,EAAgB,SAAAjC,GAAI,OAAI,SAA6BkC,GAEzD,OADAC,QAAQC,KAAK,aAAepC,EAAO,2EAC5B,kBAASkC,KAGZG,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGN,EACF,8BACD,OAAO,YAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCM,WAAYA,EAAYC,QAAQ,cAE5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,sFAAqE,sBAAQC,WAAW,KAAnB,WAArE,gHACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4mBAAioBC,QAAS,CAC3qBX,MAAOY,KAAOA,KAAKZ,MAAQA,EAC3Ba,eACAC,UACAjD,qBACC0C,QAAQ,cACb,YAAC,IAAD,CAAiBzC,KAAK,SAASF,MAAM,cAAcG,SAAS,EAAOG,SAAU,kBAAM+B,QAAQc,IAAI,WAAWR,QAAQ,oBAClH,YAAC,IAAD,CAAiBzC,KAAK,SAASF,MAAM,gBAAgBM,SAAU,kBAAM+B,QAAQc,IAAI,WAAWR,QAAQ,oBACpG,YAAC,IAAD,CAAiBzC,KAAK,SAASF,MAAM,UAAUG,SAAS,EAAMG,SAAU,kBAAM+B,QAAQc,IAAI,WAAWR,QAAQ,oBAC7G,YAAC,IAAD,CAAiBzC,KAAK,SAASF,MAAM,UAAUG,SAAS,EAAOC,SAAO,EAACE,SAAU,kBAAM+B,QAAQc,IAAI,WAAWR,QAAQ,oBACtH,YAAC,IAAD,CAAiBtC,UAAQ,EAACH,KAAK,SAASF,MAAM,WAAWG,SAAS,EAAOG,SAAU,kBAAM+B,QAAQc,IAAI,WAAWR,QAAQ,qBAEtH,iBAAQ,CACN,GAAM,YADR,YAGA,4BAAW,sBAAQC,WAAW,KAAnB,YAAX,4EACA,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,0DAEL,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOQ,GAAInD,IAAiB0C,QAAQ,W,6LAKxCF,EAAWY,gBAAiB,G,8FAhDtBlB,E,2GAKAI,E,yGAGAC,E,uGACkBC,E","file":"static/js/components-ui-ui-input-checkbox.5952ee45.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon, Label } from 'rbx'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faTimes, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport styled from 'styled-components'\n\nconst StyledLabel = styled.label`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const UiInputCheckbox = ({\n  name,\n  label,\n  checked,\n  loading,\n  disabled,\n  onChange,\n  ...rest\n}) => {\n  const ref = React.useRef()\n  const isUndefined = typeof checked === 'undefined'\n  const icon = isUndefined ? faMinus : checked ? faCheck : faTimes\n  const color = checked ? 'success' : 'grey-light'\n  const iconColor = checked ? null : 'grey-light'\n  const state = loading ? 'loading' : null\n\n  const sendChanges = () => {\n    if (onChange) {\n      onChange({ target: { type: 'checkbox', name, checked: !checked } })\n    }\n  }\n\n  const handleClick = e => {\n    e.preventDefault()\n    sendChanges()\n    ref.current.blur()\n  }\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 32 || e.keyCode === 13) {\n      e.preventDefault()\n      sendChanges()\n    }\n  }\n\n  return (\n    <Label as={StyledLabel}>\n      <Button\n        ref={ref}\n        size=\"small\"\n        state={state}\n        onClick={handleClick}\n        onKeyDown={handleKeyDown}\n        disabled={!!disabled}\n        aria-pressed={!!checked}\n        title={label || name}\n        outlined\n        color={color}\n        {...rest}\n      >\n        <Icon color={iconColor}>\n          {!loading && <FontAwesomeIcon icon={icon} />}\n        </Icon>\n      </Button>\n      {label && <span style={{ paddingLeft: '1rem' }}>{label}</span>}\n    </Label>\n  )\n}\n\nUiInputCheckbox.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { UiInputCheckbox } from './ui-input-checkbox'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"uiinputcheckbox\"\n    }}>{`UiInputCheckbox`}</h1>\n    <p>{`Displays a form checkbox, styled according to Odin styles. If `}<strong parentName=\"p\">{`checked`}</strong>{` is undefined, it will display as indeterminate. Label may be passed as a prop and it will wrap the element.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<UiInputCheckbox\\n  name=\\\"check1\\\"\\n  label=\\\"Not Checked\\\"\\n  checked={false}\\n  onChange={() => console.log(\\'check1\\')}\\n/>\\n<UiInputCheckbox\\n  name=\\\"check2\\\"\\n  label=\\\"Indeterminate\\\"\\n  onChange={() => console.log(\\'check2\\')}\\n/>\\n<UiInputCheckbox\\n  name=\\\"check3\\\"\\n  label=\\\"Checked\\\"\\n  checked={true}\\n  onChange={() => console.log(\\'check3\\')}\\n/>\\n<UiInputCheckbox\\n  name=\\\"check4\\\"\\n  label=\\\"Loading\\\"\\n  checked={false}\\n  loading\\n  onChange={() => console.log(\\'check4\\')}\\n/>\\n<UiInputCheckbox\\n  disabled\\n  name=\\\"check5\\\"\\n  label=\\\"Disabled\\\"\\n  checked={false}\\n  onChange={() => console.log(\\'check5\\')}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      UiInputCheckbox\n    }} mdxType=\"Playground\">\n  <UiInputCheckbox name=\"check1\" label=\"Not Checked\" checked={false} onChange={() => console.log('check1')} mdxType=\"UiInputCheckbox\" />\n  <UiInputCheckbox name=\"check2\" label=\"Indeterminate\" onChange={() => console.log('check2')} mdxType=\"UiInputCheckbox\" />\n  <UiInputCheckbox name=\"check3\" label=\"Checked\" checked={true} onChange={() => console.log('check3')} mdxType=\"UiInputCheckbox\" />\n  <UiInputCheckbox name=\"check4\" label=\"Loading\" checked={false} loading onChange={() => console.log('check4')} mdxType=\"UiInputCheckbox\" />\n  <UiInputCheckbox disabled name=\"check5\" label=\"Disabled\" checked={false} onChange={() => console.log('check5')} mdxType=\"UiInputCheckbox\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"onchange\"\n    }}>{`onChange`}</h2>\n    <p>{`The `}<strong parentName=\"p\">{`onChange`}</strong>{` callback returns an object similar to a native checkbox onChange event.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{ name: 'check1', type: 'checkbox', checked: true }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={UiInputCheckbox} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}