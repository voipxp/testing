{"version":3,"sources":["/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-data-table.js","/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-data-table.mdx","/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-checkbox.js","/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-pagination.js"],"names":["WrappedTable","styled","div","UiDataTable","columns","rowKey","rows","pageSize","showSelect","hideSearch","onClick","onSelect","React","useState","currentPage","setCurrentPage","selectedItems","setSelectedItems","search","setSearch","sortBy","setSortBy","sortOrder","setSortOrder","filteredItems","useMemo","orderBy","v","regex","RegExp","newItems","filter","row","Object","keys","key","test","pager","paginate","length","pagedItems","slice","startIndex","endIndex","canClick","isFunction","canSelect","allSelected","handleClick","selectRow","isSelected","id","newSelectedItems","type","placeholder","value","onChange","e","target","style","marginBottom","kind","size","icon","faTimes","expanded","static","fullwidth","color","selectedKeys","includes","faCheck","bordered","striped","narrow","className","cx","tableHover","Head","Row","Heading","textAlign","reduce","obj","item","checked","map","column","whiteSpace","href","preventDefault","handleSort","label","align","faSortUp","faSortDown","headingIcon","Foot","Cell","colSpan","Body","render","get","pages","totalPages","page","onFirst","onNext","onPrevious","onLast","makeShortcode","name","props","console","warn","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Playground","Props","first","last","log","of","isMDXComponent","StyledLabel","UiInputCheckbox","loading","disabled","rest","ref","useRef","faMinus","iconColor","state","sendChanges","as","current","blur","onKeyDown","keyCode","aria-pressed","title","outlined","paddingLeft","UiPagination","Group","hasAddons","marginTop","faAngleDoubleLeft","faAngleLeft","faAngleRight","faAngleDoubleRight"],"mappings":"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","file":"static/js/components-ui-ui-data-table.41a62a32.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid,no-script-url */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport paginate from 'jw-paginate'\nimport cx from 'classnames'\nimport get from 'lodash/get'\nimport isFunction from 'lodash/isFunction'\nimport { orderBy } from 'natural-orderby'\nimport { Table, Input, Icon, Button, Field, Control } from 'rbx'\nimport { UiPagination } from './ui-pagination'\nimport { UiInputCheckbox } from './ui-input-checkbox'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSortUp,\n  faSortDown,\n  faTimes,\n  faCheck\n} from '@fortawesome/free-solid-svg-icons'\n\nconst WrappedTable = styled.div`\n  display: block;\n  width: 100%;\n  overflow-x: auto;\n\n  table.tableHover tbody > tr:hover {\n    cursor: pointer;\n    background-color: hsl(217, 71%, 53%) !important;\n    color: #fff;\n  }\n`\n\nexport const UiDataTable = ({\n  columns,\n  rowKey,\n  rows = [],\n  pageSize = 10,\n  showSelect = false,\n  hideSearch = false,\n  onClick,\n  onSelect\n}) => {\n  const [currentPage, setCurrentPage] = React.useState(1)\n  const [selectedItems, setSelectedItems] = React.useState({})\n  const [search, setSearch] = React.useState('')\n  const [sortBy, setSortBy] = React.useState(rowKey)\n  const [sortOrder, setSortOrder] = React.useState('asc')\n\n  const filteredItems = React.useMemo(() => {\n    if (!search) return orderBy(rows, v => v[sortBy], sortOrder)\n    const regex = new RegExp(search, 'i')\n    const newItems = rows.filter(row => {\n      for (const key of Object.keys(row)) {\n        if (regex.test(row[key])) return true\n      }\n      return false\n    })\n    return orderBy(newItems, v => v[sortBy], sortOrder)\n  }, [rows, search, sortBy, sortOrder])\n\n  const pager = React.useMemo(() => {\n    return paginate(filteredItems.length, currentPage, pageSize)\n  }, [currentPage, filteredItems.length, pageSize])\n\n  const pagedItems = React.useMemo(() => {\n    return filteredItems.slice(pager.startIndex, pager.endIndex + 1)\n  }, [filteredItems, pager])\n\n  const handleSearch = e => setSearch(e.target.value)\n  const handleSort = (e, column) => {\n    e.preventDefault()\n    sortBy === column.key\n      ? setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')\n      : setSortBy(column.key)\n  }\n\n  const onFirst = () => setCurrentPage(1)\n  const onPrevious = () => setCurrentPage(page => page - 1)\n  const onNext = () => setCurrentPage(page => page + 1)\n  const onLast = () => setCurrentPage(pager.totalPages)\n\n  const canClick = isFunction(onClick)\n  const canSelect = showSelect && isFunction(onSelect)\n  const allSelected = Object.keys(selectedItems).length === filteredItems.length\n\n  const handleClick = row => {\n    if (canSelect) {\n      selectRow(row)\n    } else if (canClick) {\n      onClick(row)\n    }\n  }\n\n  const handleSelectAll = () => {\n    allSelected\n      ? setSelectedItems({})\n      : setSelectedItems(\n          filteredItems.reduce((obj, item) => {\n            obj[item[rowKey]] = true\n            return obj\n          }, {})\n        )\n  }\n\n  const isSelected = row => !!selectedItems[row[rowKey]]\n\n  const selectRow = row => {\n    const id = row[rowKey]\n    const newSelectedItems = { ...selectedItems }\n    if (newSelectedItems[id]) {\n      delete newSelectedItems[id]\n    } else {\n      newSelectedItems[id] = true\n    }\n    setSelectedItems(newSelectedItems)\n  }\n\n  const cancelSelection = () => {\n    setSelectedItems([])\n    onSelect([])\n  }\n\n  const sendSelected = () => {\n    const selectedKeys = Object.keys(selectedItems)\n    onSelect(rows.filter(row => selectedKeys.includes(row[rowKey])))\n    setSelectedItems([])\n  }\n\n  const headingIcon = column => {\n    if (column.key !== sortBy) return null\n    return (\n      <Icon size=\"small\" align=\"left\">\n        <FontAwesomeIcon icon={sortOrder === 'asc' ? faSortUp : faSortDown} />\n      </Icon>\n    )\n  }\n\n  return (\n    <>\n      {!hideSearch && rows.length > 1 && (\n        <Input\n          type=\"search\"\n          placeholder=\"Filter Results\"\n          value={search}\n          onChange={handleSearch}\n          style={{ marginBottom: '1rem' }}\n        />\n      )}\n      {canSelect && (\n        <Field kind=\"addons\">\n          <Control>\n            <Button onClick={cancelSelection}>\n              <Icon size=\"small\">\n                <FontAwesomeIcon icon={faTimes} />\n              </Icon>\n            </Button>\n          </Control>\n          <Control expanded>\n            <Button static fullwidth>\n              Items Selected:&nbsp;\n              <strong>{Object.keys(selectedItems).length}</strong>\n            </Button>\n          </Control>\n          <Control>\n            <Button color=\"primary\" onClick={sendSelected}>\n              <Icon size=\"small\">\n                <FontAwesomeIcon icon={faCheck} />\n              </Icon>\n            </Button>\n          </Control>\n        </Field>\n      )}\n      <WrappedTable>\n        <Table\n          fullwidth\n          bordered\n          striped\n          narrow\n          className={cx({ tableHover: canClick || canSelect })}\n        >\n          <Table.Head>\n            <Table.Row>\n              {canSelect && (\n                <Table.Heading textAlign=\"centered\" onClick={handleSelectAll}>\n                  <UiInputCheckbox checked={allSelected} />\n                </Table.Heading>\n              )}\n              {columns.map(column => (\n                <Table.Heading\n                  key={column.key}\n                  style={{ whiteSpace: 'nowrap' }}\n                >\n                  <a href=\"\" onClick={e => handleSort(e, column)}>\n                    {column.label || column.key}\n                    {headingIcon(column)}\n                  </a>\n                </Table.Heading>\n              ))}\n            </Table.Row>\n          </Table.Head>\n          {pagedItems.length === 0 ? (\n            <Table.Foot>\n              <Table.Row>\n                <Table.Cell colSpan=\"100\">No Data Found</Table.Cell>\n              </Table.Row>\n            </Table.Foot>\n          ) : (\n            <Table.Body>\n              {pagedItems.map(row => (\n                <Table.Row key={row[rowKey]} onClick={() => handleClick(row)}>\n                  {canSelect && (\n                    <Table.Cell textAlign=\"centered\">\n                      <UiInputCheckbox checked={isSelected(row)} />\n                    </Table.Cell>\n                  )}\n                  {columns.map(column => (\n                    <Table.Cell\n                      key={column.key}\n                      style={{ whiteSpace: 'nowrap' }}\n                    >\n                      {isFunction(column.render)\n                        ? column.render(row)\n                        : get(row, column.key)}\n                    </Table.Cell>\n                  ))}\n                </Table.Row>\n              ))}\n            </Table.Body>\n          )}\n        </Table>\n      </WrappedTable>\n      <UiPagination\n        align=\"right\"\n        pages={pager.totalPages}\n        page={currentPage}\n        onFirst={onFirst}\n        onNext={onNext}\n        onPrevious={onPrevious}\n        onLast={onLast}\n      />\n    </>\n  )\n}\n\nUiDataTable.propTypes = {\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      label: PropTypes.string,\n      render: PropTypes.func\n    })\n  ).isRequired,\n  rows: PropTypes.array.isRequired,\n  rowKey: PropTypes.string.isRequired,\n  pageSize: PropTypes.number,\n  hideSearch: PropTypes.bool,\n  showSelect: PropTypes.bool,\n  onClick: PropTypes.func,\n  onSelect: PropTypes.func\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport { UiDataTable } from './ui-data-table'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"uidatatable\"\n    }}>{`UiDataTable`}</h1>\n    <p>{`Renders a data table. You must pass in the `}<strong parentName=\"p\">{`columns`}</strong>{` prop which contains the data schema. The `}<strong parentName=\"p\">{`rows`}</strong>{` which are an array of objects to display in the table. The `}<strong parentName=\"p\">{`rowKey`}</strong>{` which is the unique identifier in each row.`}</p>\n    <p>{`The table will automatically paginate the data (defaults to 10) and show a filter search bar. You can set `}<strong parentName=\"p\">{`hideSearch`}</strong>{` to true to disable the search bar.`}</p>\n    <p>{`If `}<strong parentName=\"p\">{`onClick`}</strong>{` is a callback function, the table will be hoverable and the row clicked will be passed back to the callback.`}</p>\n    <p>{`If `}<strong parentName=\"p\">{`onSelect`}</strong>{` is a callback function, then the table is selectable. You must set `}<strong parentName=\"p\">{`showSelect`}</strong>{` to true, to show the selection. The `}<strong parentName=\"p\">{`onSelect`}</strong>{` callback will be passed an array of selected rows. NOTE: Canceling the select returns an empty array.`}</p>\n    <p>{`The columns schema defines the `}<strong parentName=\"p\">{`key`}</strong>{` in each column and an optional `}<strong parentName=\"p\">{`label`}</strong>{` to present in the table header. By default, the value of `}<inlineCode parentName=\"p\">{`row[column.key]`}</inlineCode>{` will be displayed. If a `}<strong parentName=\"p\">{`render`}</strong>{` prop is passed, the render prop will be executed passing in the `}<strong parentName=\"p\">{`row`}</strong>{` instead.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<UiDataTable\\n  columns={[\\n    { key: \\'id\\', label: \\'ID\\' },\\n    { key: \\'last\\', label: \\'Last Name\\' },\\n    { key: \\'first\\', label: \\'First Name\\' },\\n    {\\n      key: \\'full\\',\\n      label: \\'Full Name\\',\\n      render: row => `${row.first} ${row.last}`,\\n    },\\n  ]}\\n  rows={[\\n    { id: 1, first: \\'Monkey\\', last: \\'Man\\' },\\n    { id: 2, first: \\'Cat\\', last: \\'Girl\\' },\\n    { id: 3, first: \\'Dog\\', last: \\'Hammer\\' },\\n  ]}\\n  rowKey=\\\"id\\\"\\n  pageSize={2}\\n  onClick={row => console.log(\\'clicked\\', row)}\\n/>\\n<hr />\\n<UiDataTable\\n  columns={[\\n    { key: \\'id\\', label: \\'ID\\' },\\n    { key: \\'last\\', label: \\'Last Name\\' },\\n    { key: \\'first\\', label: \\'First Name\\' },\\n    {\\n      key: \\'full\\',\\n      label: \\'Full Name\\',\\n      render: row => `${row.first} ${row.last}`,\\n    },\\n  ]}\\n  rows={[\\n    { id: 1, first: \\'Monkey\\', last: \\'Man\\' },\\n    { id: 2, first: \\'Cat\\', last: \\'Girl\\' },\\n    { id: 3, first: \\'Dog\\', last: \\'Hammer\\' },\\n  ]}\\n  rowKey=\\\"id\\\"\\n  pageSize={2}\\n  showSelect={true}\\n  onClick={row => console.log(\\'clicked\\', row)}\\n  onSelect={rows => console.log(\\'selected\\', rows)}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      UiDataTable\n    }} mdxType=\"Playground\">\n  <UiDataTable columns={[{\n        key: 'id',\n        label: 'ID'\n      }, {\n        key: 'last',\n        label: 'Last Name'\n      }, {\n        key: 'first',\n        label: 'First Name'\n      }, {\n        key: 'full',\n        label: 'Full Name',\n        render: row => `${row.first} ${row.last}`\n      }]} rows={[{\n        id: 1,\n        first: 'Monkey',\n        last: 'Man'\n      }, {\n        id: 2,\n        first: 'Cat',\n        last: 'Girl'\n      }, {\n        id: 3,\n        first: 'Dog',\n        last: 'Hammer'\n      }]} rowKey=\"id\" pageSize={2} onClick={row => console.log('clicked', row)} mdxType=\"UiDataTable\" />\n  <hr />\n  <UiDataTable columns={[{\n        key: 'id',\n        label: 'ID'\n      }, {\n        key: 'last',\n        label: 'Last Name'\n      }, {\n        key: 'first',\n        label: 'First Name'\n      }, {\n        key: 'full',\n        label: 'Full Name',\n        render: row => `${row.first} ${row.last}`\n      }]} rows={[{\n        id: 1,\n        first: 'Monkey',\n        last: 'Man'\n      }, {\n        id: 2,\n        first: 'Cat',\n        last: 'Girl'\n      }, {\n        id: 3,\n        first: 'Dog',\n        last: 'Hammer'\n      }]} rowKey=\"id\" pageSize={2} showSelect={true} onClick={row => console.log('clicked', row)} onSelect={rows => console.log('selected', rows)} mdxType=\"UiDataTable\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={UiDataTable} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon, Label } from 'rbx'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faTimes, faMinus } from '@fortawesome/free-solid-svg-icons'\nimport styled from 'styled-components'\n\nconst StyledLabel = styled.label`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const UiInputCheckbox = ({\n  name,\n  label,\n  checked,\n  loading,\n  disabled,\n  onChange,\n  ...rest\n}) => {\n  const ref = React.useRef()\n  const isUndefined = typeof checked === 'undefined'\n  const icon = isUndefined ? faMinus : checked ? faCheck : faTimes\n  const color = checked ? 'success' : 'grey-light'\n  const iconColor = checked ? null : 'grey-light'\n  const state = loading ? 'loading' : null\n\n  const sendChanges = () => {\n    if (onChange) {\n      onChange({ target: { type: 'checkbox', name, checked: !checked } })\n    }\n  }\n\n  const handleClick = e => {\n    e.preventDefault()\n    sendChanges()\n    ref.current.blur()\n  }\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 32 || e.keyCode === 13) {\n      e.preventDefault()\n      sendChanges()\n    }\n  }\n\n  return (\n    <Label as={StyledLabel}>\n      <Button\n        ref={ref}\n        size=\"small\"\n        state={state}\n        onClick={handleClick}\n        onKeyDown={handleKeyDown}\n        disabled={!!disabled}\n        aria-pressed={!!checked}\n        title={label || name}\n        outlined\n        color={color}\n        {...rest}\n      >\n        <Icon color={iconColor}>\n          {!loading && <FontAwesomeIcon icon={icon} />}\n        </Icon>\n      </Button>\n      {label && <span style={{ paddingLeft: '1rem' }}>{label}</span>}\n    </Label>\n  )\n}\n\nUiInputCheckbox.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'rbx'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faAngleDoubleLeft,\n  faAngleLeft,\n  faAngleDoubleRight,\n  faAngleRight\n} from '@fortawesome/free-solid-svg-icons'\n\nexport const UiPagination = ({\n  align = 'left',\n  pages = 1,\n  page = 1,\n  onFirst,\n  onPrevious,\n  onNext,\n  onLast\n}) => {\n  if (pages < 2) return null\n\n  return (\n    <Button.Group hasAddons align={align} style={{ marginTop: '1rem' }}>\n      <Button size=\"small\" onClick={onFirst} disabled={page === 1}>\n        <Icon size=\"small\">\n          <FontAwesomeIcon icon={faAngleDoubleLeft} />\n        </Icon>\n      </Button>\n\n      <Button size=\"small\" onClick={onPrevious} disabled={page === 1}>\n        <Icon size=\"small\">\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </Icon>\n      </Button>\n\n      <Button size=\"small\" static>\n        {page}/{pages}\n      </Button>\n\n      <Button size=\"small\" onClick={onNext} disabled={page === pages}>\n        <Icon size=\"small\">\n          <FontAwesomeIcon icon={faAngleRight} />\n        </Icon>\n      </Button>\n\n      <Button size=\"small\" onClick={onLast} disabled={page === pages}>\n        <Icon size=\"small\">\n          <FontAwesomeIcon icon={faAngleDoubleRight} />\n        </Icon>\n      </Button>\n    </Button.Group>\n  )\n}\n\nUiPagination.propTypes = {\n  align: PropTypes.oneOf(['left', 'centered', 'right']),\n  pages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onFirst: PropTypes.func,\n  onNext: PropTypes.func,\n  onPrevious: PropTypes.func,\n  onLast: PropTypes.func\n}\n"],"sourceRoot":""}