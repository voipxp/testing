{"version":3,"sources":["/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-password.js","/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-password.mdx"],"names":["UiInputPassword","required","onGeneratePassword","props","React","useState","showPassword","setShowPassword","repeatPassword","setRepeatPassword","passwordValid","setPasswordValid","repeatPasswordValid","setRepeatPasswordValid","pattern","setPattern","passwordRef","useRef","repeatPasswordRef","validatePasswords","setTimeout","current","validity","valid","handleGeneratePassword","e","a","preventDefault","newPassword","escapeRegExp","onChange","target","name","value","kind","expanded","iconRight","placeholder","ref","type","autoCapitalize","align","size","color","icon","faCheck","faExclamationTriangle","onClick","faKey","faEye","faEyeSlash","makeShortcode","console","warn","PasswordExample","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Button","Label","Playground","Props","formRef","password","form","setForm","formValid","setFormValid","useEffect","checkValidity","onSubmit","label","minLength","disabled","of","isMDXComponent"],"mappings":"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","file":"static/js/components-ui-ui-input-password.bfa23572.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Field, Control, Button, Icon } from 'rbx'\nimport escapeRegExp from 'lodash/escapeRegExp'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faExclamationTriangle,\n  faCheck,\n  faKey,\n  faEye,\n  faEyeSlash\n} from '@fortawesome/free-solid-svg-icons'\n\nexport const UiInputPassword = ({\n  required = false,\n  onGeneratePassword,\n  ...props\n}) => {\n  const [showPassword, setShowPassword] = React.useState(false)\n  const [repeatPassword, setRepeatPassword] = React.useState('')\n  const [passwordValid, setPasswordValid] = React.useState(false)\n  const [repeatPasswordValid, setRepeatPasswordValid] = React.useState(false)\n  const [pattern, setPattern] = React.useState('')\n\n  const passwordRef = React.useRef()\n  const repeatPasswordRef = React.useRef()\n\n  const validatePasswords = () => {\n    setTimeout(() => {\n      setPasswordValid(passwordRef.current.validity.valid)\n      setRepeatPasswordValid(repeatPasswordRef.current.validity.valid)\n    }, 0)\n  }\n\n  const handlePassword = e => {\n    setPattern(escapeRegExp(e.target.value))\n    validatePasswords()\n    props.onChange(e)\n  }\n\n  const handleRepeatPassword = e => {\n    setRepeatPassword(e.target.value)\n    validatePasswords()\n    props.onChange({ target: { name: props.name, value: props.value } })\n  }\n\n  const handleGeneratePassword = async e => {\n    e.preventDefault()\n    const newPassword = await onGeneratePassword()\n    setPattern(escapeRegExp(newPassword))\n    setRepeatPassword(newPassword)\n    validatePasswords()\n    props.onChange({ target: { name: props.name, value: newPassword } })\n  }\n\n  const toggleShowPassword = e => {\n    e.preventDefault()\n    setShowPassword(!showPassword)\n  }\n\n  return (\n    <>\n      <Field kind=\"addons\">\n        <Control expanded iconRight>\n          <Input\n            {...props}\n            placeholder=\"Password\"\n            required={required}\n            ref={passwordRef}\n            type={showPassword ? 'text' : 'password'}\n            onChange={handlePassword}\n            autoCapitalize=\"off\"\n          />\n          <Icon\n            align=\"right\"\n            size=\"medium\"\n            color={passwordValid ? 'success' : 'light-grey'}\n          >\n            <FontAwesomeIcon\n              icon={passwordValid ? faCheck : faExclamationTriangle}\n            />\n          </Icon>\n        </Control>\n        <Control>\n          <Button color=\"link\" onClick={handleGeneratePassword}>\n            <Icon>\n              <FontAwesomeIcon icon={faKey} />\n            </Icon>\n          </Button>\n        </Control>\n      </Field>\n      <Field kind=\"addons\">\n        <Control expanded iconRight>\n          <Input\n            {...props}\n            placeholder=\"Repeat Password\"\n            ref={repeatPasswordRef}\n            type={showPassword ? 'text' : 'password'}\n            name={`${props.name}-validation`}\n            value={repeatPassword}\n            onChange={handleRepeatPassword}\n            pattern={pattern}\n            required={required || props.value}\n            autoCapitalize=\"off\"\n          />\n          <Icon\n            align=\"right\"\n            size=\"medium\"\n            color={repeatPasswordValid ? 'success' : 'light-grey'}\n          >\n            <FontAwesomeIcon\n              icon={repeatPasswordValid ? faCheck : faExclamationTriangle}\n            />\n          </Icon>\n        </Control>\n        <Control>\n          <Button color=\"link\" onClick={toggleShowPassword}>\n            <Icon>\n              <FontAwesomeIcon icon={showPassword ? faEye : faEyeSlash} />\n            </Icon>\n          </Button>\n        </Control>\n      </Field>\n    </>\n  )\n}\n\nUiInputPassword.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onGeneratePassword: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  required: PropTypes.bool\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { UiInputPassword } from './ui-input-password'\nimport { Button, Label } from 'rbx'\nimport { Playground, Props } from 'docz'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PasswordExample = makeShortcode(\"PasswordExample\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"uiinputpassword\"\n    }}>{`UiInputPassword`}</h1>\n    <p>{`Displays a password input and a repeat password input field, with an option of displaying the password. Provide an `}<strong parentName=\"p\">{`onGeneratePassword`}</strong>{` callback to automatically generate the password.`}</p>\n    <p>{`You may pass any ordinary input field properties through such as `}<strong parentName=\"p\">{`required`}</strong>{`, `}<strong parentName=\"p\">{`minLength`}</strong>{`, `}<strong parentName=\"p\">{`disabled`}</strong>{`, etc..`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const PasswordExample = () => {\\n    const formRef = React.useRef()\\n    const [form, setForm] = React.useState({ password: \\'\\' })\\n    const [formValid, setFormValid] = React.useState(false)\\n    const generatePassword = () => \\'123456\\'\\n    React.useEffect(() => {\\n      if (formRef.current) setFormValid(formRef.current.checkValidity())\\n    })\\n\\n    const handleChange = e => {\\n      const { name, value } = e.target\\n      setForm({ ...form, [name]: value })\\n    }\\n\\n    return (\\n      <form ref={formRef} onSubmit={e => e.preventDefault()}>\\n        <Label>New Password</Label>\\n        <UiInputPassword\\n          name=\\\"password\\\"\\n          label=\\\"Password\\\"\\n          onChange={handleChange}\\n          value={form.password}\\n          minLength={5}\\n          required\\n          onGeneratePassword={generatePassword}\\n        />\\n        <Button color=\\\"link\\\" type=\\\"submit\\\" disabled={!formValid}>\\n          Submit\\n        </Button>\\n      </form>\\n    )\\n  }\\n  return <PasswordExample />\\n}'} __scope={{\n      props: this ? this.props : props,\n      UiInputPassword,\n      Button,\n      Label,\n      Playground,\n      Props\n    }} mdxType=\"Playground\">\n  {() => {\n        const PasswordExample = () => {\n          const formRef = React.useRef();\n          const [form, setForm] = React.useState({\n            password: ''\n          });\n          const [formValid, setFormValid] = React.useState(false);\n\n          const generatePassword = () => '123456';\n\n          React.useEffect(() => {\n            if (formRef.current) setFormValid(formRef.current.checkValidity());\n          });\n\n          const handleChange = e => {\n            const {\n              name,\n              value\n            } = e.target;\n            setForm({ ...form,\n              [name]: value\n            });\n          };\n\n          return <form ref={formRef} onSubmit={e => e.preventDefault()}>\n      <Label mdxType=\"Label\">New Password</Label>\n      <UiInputPassword name=\"password\" label=\"Password\" onChange={handleChange} value={form.password} minLength={5} required onGeneratePassword={generatePassword} mdxType=\"UiInputPassword\" />\n      <Button color=\"link\" type=\"submit\" disabled={!formValid} mdxType=\"Button\">\n        Submit\n      </Button>\n    </form>;\n        };\n\n        return <PasswordExample mdxType=\"PasswordExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"ongeneratepassword\"\n    }}>{`onGeneratePassword`}</h2>\n    <p>{`The `}<strong parentName=\"p\">{`onGeneratePassword`}</strong>{` callback will be called to generate the new password and it will set the password and password confirmation with the results.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={UiInputPassword} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}