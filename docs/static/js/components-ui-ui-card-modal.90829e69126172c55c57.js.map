{"version":3,"sources":["/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-card-modal.js","/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-card-modal.mdx"],"names":["StyledModal","styled","div","UiCardModal","children","isOpen","onCancel","onSave","onDelete","title","cancelText","saveText","deleteText","classNames","timeout","in","mountOnEnter","unmountOnExit","className","Background","Card","Head","Title","onClick","Body","Foot","style","justifyContent","Group","align","isFunction","color","makeShortcode","name","props","console","warn","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Props","Playground","IFramePlayground","minHeight","maxHeight","setShowModal","of","isMDXComponent"],"mappings":"2nBAUMA,EAAcC,IAAOC,IAAV,6EAAGD,CAAH,ymBA0CJE,EAAc,SAAC,GAAD,IACzBC,EADyB,EACzBA,SACAC,EAFyB,EAEzBA,OACAC,EAHyB,EAGzBA,SACAC,EAJyB,EAIzBA,OACAC,EALyB,EAKzBA,SACAC,EANyB,EAMzBA,MANyB,IAOzBC,kBAPyB,MAOZ,SAPY,MAQzBC,gBARyB,MAQd,OARc,MASzBC,kBATyB,MASZ,SATY,SAWzB,kBAAC,IAAD,CACEC,WAAW,QACXC,QAzDY,IA0DZC,GAAIV,EACJW,cAAc,EACdC,eAAe,GAEf,kBAACjB,EAAD,CAAakB,UAAU,mBACrB,kBAAC,IAAMC,WAAP,MACA,kBAAC,IAAMC,KAAP,KACE,kBAAC,IAAMA,KAAKC,KAAZ,KACE,kBAAC,IAAMD,KAAKE,MAAZ,KAAmBb,GACnB,kBAAC,IAAD,CAAQc,QAAS,kBAAMjB,QAEzB,kBAAC,IAAMc,KAAKI,KAAZ,KAAkBpB,GAClB,kBAAC,IAAMgB,KAAKK,KAAZ,CAAiBC,MAAO,CAAEC,eAAgB,aACxC,kBAAC,IAAOC,MAAR,CAAcC,MAAM,SACjBC,IAAWtB,IACV,kBAAC,IAAD,CAAQuB,MAAM,SAASR,QAAS,kBAAMf,MACnCI,GAGL,kBAAC,IAAD,CAAQW,QAASjB,GAAWI,GAC3BoB,IAAWvB,IACV,kBAAC,IAAD,CAAQwB,MAAM,UAAUR,QAAS,kBAAMhB,MACpCI,S,gTAhFD,I,gGAEVX,E,oGA0COG,E,g4BC3CP6B,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGN,EACF,8BACD,OAAO,YAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCM,WAAYA,EAAYC,QAAQ,cAE5E,iBAAQ,CACN,GAAM,eADR,eAGA,wGAAuF,sBAAQC,WAAW,KAAnB,UAAvF,aACA,wDAAuC,sBAAQA,WAAW,KAAnB,UAAvC,gBAAkG,sBAAQA,WAAW,KAAnB,QAAlG,QAAmJ,sBAAQA,WAAW,KAAnB,UAAnJ,kCAAgO,sBAAQA,WAAW,KAAnB,UAAhO,OAAkR,sBAAQA,WAAW,KAAnB,YAAlR,yBACA,qEAAoD,sBAAQA,WAAW,KAAnB,UAApD,wCAAuI,sBAAQA,WAAW,KAAnB,YAAvI,kBAAsM,sBAAQA,WAAW,KAAnB,QAAtM,wCAAuR,sBAAQA,WAAW,KAAnB,UAAvR,mBAAqV,sBAAQA,WAAW,KAAnB,UAArV,uCAAua,sBAAQA,WAAW,KAAnB,YAAva,YACA,uFAAsE,sBAAQA,WAAW,KAAnB,UAAtE,sCACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mYAAwYC,QAAS,CAClbX,MAAOY,KAAOA,KAAKZ,MAAQA,EAC3Ba,UACAC,eACAC,qBACA9C,iBACCsC,QAAQ,cACb,YAAC,IAAD,CAAkBS,UAAW,IAAKC,UAAW,IAAKV,QAAQ,oBACxD,YAAC,IAAD,CAAahC,MAAM,gBAAgBJ,QAAQ,EAAMC,SAAU,kBAAM8C,cAAa,IAAQ7C,OAAQ,kBAAM6C,cAAa,IAAQ5C,SAAU,kBAAM4C,cAAa,IAAQzC,SAAS,cAAc8B,QAAQ,eAC3L,2FAIF,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOY,GAAIlD,IAAasC,QAAQ,W,yLAKpCF,EAAWe,gBAAiB,G,8FA9CtBtB,E,uGAKAK,E,qGAGAC,E,mGACkBC,E","file":"static/js/components-ui-ui-card-modal.0f13db5b.js","sourcesContent":["// TODO: form validity check\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport isFunction from 'lodash/isFunction'\nimport { Modal, Delete, Button } from 'rbx'\nimport { CSSTransition } from 'react-transition-group'\n\nconst TIMEOUT = 300\n\nconst StyledModal = styled.div`\n  flex-direction: column;\n  &modal {\n    flex-direction: column;\n  }\n  &.modal-card {\n    overflow-y: visible;\n  }\n  &.modal-card-body {\n    position: relative;\n  }\n  &.modal-card-foot {\n    justify-content: flex-end !important;\n  }\n  &.modal-enter {\n    animation-name: fadeIn;\n    animation-duration: 350ms;\n  }\n  &.modal-enter .modal-card {\n    animation-name: zoomIn;\n    animation-duration: 350ms;\n  }\n  &.modal-exit {\n    display: flex !important;\n    animation-name: fadeOut;\n    animation-duration: 350ms;\n  }\n  &.modal-exit .modal-card {\n    animation-name: zoomOut;\n    animation-duration: 350ms;\n  }\n  @media (min-width: 769px) {\n    .modal-content,\n    .modal-card {\n      margin: 0 auto;\n      max-height: calc(100vh - 40px);\n      max-width: calc(100% - 80px);\n      width: 900px;\n    }\n  }\n`\n\nexport const UiCardModal = ({\n  children,\n  isOpen,\n  onCancel,\n  onSave,\n  onDelete,\n  title,\n  cancelText = 'Cancel',\n  saveText = 'Save',\n  deleteText = 'Delete'\n}) => (\n  <CSSTransition\n    classNames=\"modal\"\n    timeout={TIMEOUT}\n    in={isOpen}\n    mountOnEnter={true}\n    unmountOnExit={true}\n  >\n    <StyledModal className=\"modal is-active\">\n      <Modal.Background />\n      <Modal.Card>\n        <Modal.Card.Head>\n          <Modal.Card.Title>{title}</Modal.Card.Title>\n          <Delete onClick={() => onCancel()} />\n        </Modal.Card.Head>\n        <Modal.Card.Body>{children}</Modal.Card.Body>\n        <Modal.Card.Foot style={{ justifyContent: 'flex-end' }}>\n          <Button.Group align=\"right\">\n            {isFunction(onDelete) && (\n              <Button color=\"danger\" onClick={() => onDelete()}>\n                {deleteText}\n              </Button>\n            )}\n            <Button onClick={onCancel}>{cancelText}</Button>\n            {isFunction(onSave) && (\n              <Button color=\"success\" onClick={() => onSave()}>\n                {saveText}\n              </Button>\n            )}\n          </Button.Group>\n        </Modal.Card.Foot>\n      </Modal.Card>\n    </StyledModal>\n  </CSSTransition>\n)\n\nUiCardModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  onSave: PropTypes.func,\n  onDelete: PropTypes.func,\n  cancelText: PropTypes.string,\n  saveText: PropTypes.string,\n  deleteText: PropTypes.string,\n  children: PropTypes.any\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Props, Playground } from 'docz'\nimport IFramePlayground from 'docz-iframe-playground'\nimport { UiCardModal } from './ui-card-modal'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"uicardmodal\"\n    }}>{`UiCardModal`}</h1>\n    <p>{`Wrap any element in a card modal. The element will be mounted and animated when `}<strong parentName=\"p\">{`isOpen`}</strong>{` is true.`}</p>\n    <p>{`The footer will always show the `}<strong parentName=\"p\">{`Cancel`}</strong>{` button. The `}<strong parentName=\"p\">{`Save`}</strong>{` and `}<strong parentName=\"p\">{`Delete`}</strong>{` buttons are only shown if the `}<strong parentName=\"p\">{`onSave`}</strong>{` or `}<strong parentName=\"p\">{`onDelete`}</strong>{` props are passed in.`}</p>\n    <p>{`When the delete icon on the top-right or the `}<strong parentName=\"p\">{`Cancel`}</strong>{` button is clicked, it will fire the `}<strong parentName=\"p\">{`onCancel`}</strong>{` event. If the `}<strong parentName=\"p\">{`Save`}</strong>{` button is clicked, it will fire the `}<strong parentName=\"p\">{`onSave`}</strong>{` button. If the `}<strong parentName=\"p\">{`Delete`}</strong>{` button is clicked it will fire the `}<strong parentName=\"p\">{`onDelete`}</strong>{` button.`}</p>\n    <p>{`The parent component should handle these events and change the `}<strong parentName=\"p\">{`isOpen`}</strong>{` prop to false to close the modal.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<IFramePlayground minHeight={400} maxHeight={800}>\\n  <UiCardModal\\n    title=\\\"Example Modal\\\"\\n    isOpen={true}\\n    onCancel={() => setShowModal(false)}\\n    onSave={() => setShowModal(false)}\\n    onDelete={() => setShowModal(false)}\\n    saveText=\\\"Custom Save\\\"\\n  >\\n    <p>Children Content Goes Here. It can be html or another Component</p>\\n  </UiCardModal>\\n</IFramePlayground>'} __scope={{\n      props: this ? this.props : props,\n      Props,\n      Playground,\n      IFramePlayground,\n      UiCardModal\n    }} mdxType=\"Playground\">\n  <IFramePlayground minHeight={400} maxHeight={800} mdxType=\"IFramePlayground\">\n    <UiCardModal title=\"Example Modal\" isOpen={true} onCancel={() => setShowModal(false)} onSave={() => setShowModal(false)} onDelete={() => setShowModal(false)} saveText=\"Custom Save\" mdxType=\"UiCardModal\">\n      <p>Children Content Goes Here. It can be html or another Component</p>\n    </UiCardModal>\n  </IFramePlayground>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={UiCardModal} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}