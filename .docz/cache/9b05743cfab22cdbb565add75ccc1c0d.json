{"remainingRequest":"/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dusty/Code/parkbench/odin-web/node_modules/docz/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js!/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-password.mdx","dependencies":[{"path":"/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-password.mdx","mtime":1567098716353},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557854551322},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js","mtime":1557854551208},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/docz/node_modules/@mdx-js/loader/index.js","mtime":1566850439452},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js","mtime":1555547971189}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-password.mdx"],"names":["React","mdx","UiInputPassword","Button","Label","Playground","Props","makeShortcode","name","MDXDefaultShortcode","props","console","warn","PasswordExample","layoutProps","MDXLayout","MDXContent","components","formRef","useRef","useState","password","form","setForm","formValid","setFormValid","generatePassword","useEffect","current","checkValidity","handleChange","e","target","value","preventDefault","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { UiInputPassword } from './ui-input-password'\nimport { Button, Label } from 'rbx'\nimport { Playground, Props } from 'docz'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PasswordExample = makeShortcode(\"PasswordExample\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"uiinputpassword\"\n    }}>{`UiInputPassword`}</h1>\n    <p>{`Displays a password input and a repeat password input field, with an option of displaying the password. Provide an `}<strong parentName=\"p\">{`onGeneratePassword`}</strong>{` callback to automatically generate the password.`}</p>\n    <p>{`You may pass any ordinary input field properties through such as `}<strong parentName=\"p\">{`required`}</strong>{`, `}<strong parentName=\"p\">{`minLength`}</strong>{`, `}<strong parentName=\"p\">{`disabled`}</strong>{`, etc..`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const PasswordExample = () => {\\n    const formRef = React.useRef()\\n    const [form, setForm] = React.useState({ password: \\'\\' })\\n    const [formValid, setFormValid] = React.useState(false)\\n    const generatePassword = () => \\'123456\\'\\n    React.useEffect(() => {\\n      if (formRef.current) setFormValid(formRef.current.checkValidity())\\n    })\\n\\n    const handleChange = e => {\\n      const { name, value } = e.target\\n      setForm({ ...form, [name]: value })\\n    }\\n\\n    return (\\n      <form ref={formRef} onSubmit={e => e.preventDefault()}>\\n        <Label>New Password</Label>\\n        <UiInputPassword\\n          name=\\\"password\\\"\\n          label=\\\"Password\\\"\\n          onChange={handleChange}\\n          value={form.password}\\n          minLength={5}\\n          required\\n          onGeneratePassword={generatePassword}\\n        />\\n        <Button color=\\\"link\\\" type=\\\"submit\\\" disabled={!formValid}>\\n          Submit\\n        </Button>\\n      </form>\\n    )\\n  }\\n  return <PasswordExample />\\n}'} __scope={{\n      props: this ? this.props : props,\n      UiInputPassword,\n      Button,\n      Label,\n      Playground,\n      Props\n    }} mdxType=\"Playground\">\n  {() => {\n        const PasswordExample = () => {\n          const formRef = React.useRef();\n          const [form, setForm] = React.useState({\n            password: ''\n          });\n          const [formValid, setFormValid] = React.useState(false);\n\n          const generatePassword = () => '123456';\n\n          React.useEffect(() => {\n            if (formRef.current) setFormValid(formRef.current.checkValidity());\n          });\n\n          const handleChange = e => {\n            const {\n              name,\n              value\n            } = e.target;\n            setForm({ ...form,\n              [name]: value\n            });\n          };\n\n          return <form ref={formRef} onSubmit={e => e.preventDefault()}>\n      <Label mdxType=\"Label\">New Password</Label>\n      <UiInputPassword name=\"password\" label=\"Password\" onChange={handleChange} value={form.password} minLength={5} required onGeneratePassword={generatePassword} mdxType=\"UiInputPassword\" />\n      <Button color=\"link\" type=\"submit\" disabled={!formValid} mdxType=\"Button\">\n        Submit\n      </Button>\n    </form>;\n        };\n\n        return <PasswordExample mdxType=\"PasswordExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"ongeneratepassword\"\n    }}>{`onGeneratePassword`}</h2>\n    <p>{`The `}<strong parentName=\"p\">{`onGeneratePassword`}</strong>{` callback will be called to generate the new password and it will set the password and password confirmation with the results.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={UiInputPassword} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}