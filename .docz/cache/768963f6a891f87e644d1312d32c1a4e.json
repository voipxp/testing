{"remainingRequest":"/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dusty/Code/parkbench/odin-web/node_modules/docz/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js!/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-password.mdx","dependencies":[{"path":"/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-password.mdx","mtime":1566938316171},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557854551322},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js","mtime":1557854551208},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/docz/node_modules/@mdx-js/loader/index.js","mtime":1566850439452},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js","mtime":1555547971189}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dusty/Code/parkbench/odin-web/src/components/ui/ui-input-password.mdx"],"names":["React","mdx","UiInputPassword","Button","Label","Playground","Props","makeShortcode","name","MDXDefaultShortcode","props","console","warn","PasswordExample","layoutProps","MDXLayout","MDXContent","components","formRef","useRef","useState","password","form","setForm","formValid","setFormValid","generatePassword","useEffect","current","checkValidity","handleChange","e","target","value","preventDefault","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { UiInputPassword } from './ui-input-password'\nimport { Button, Label } from 'rbx'\nimport { Playground, Props } from 'docz'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst PasswordExample = makeShortcode(\"PasswordExample\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"uiinputpassword\"\n    }}>{`UiInputPassword`}</h1>\n    <p>{`Displays a password input and a repeat password input field, with an option of displaying the password. Provide an `}<strong parentName=\"p\">{`onGeneratePassword`}</strong>{` callback to automatically generate the password.`}</p>\n    <p>{`You may pass any ordinary input field properties through such as `}<strong parentName=\"p\">{`required`}</strong>{`, `}<strong parentName=\"p\">{`minLength`}</strong>{`, `}<strong parentName=\"p\">{`disabled`}</strong>{`, etc..`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const PasswordExample = () => {\\n    const formRef = React.useRef()\\n    const [form, setForm] = React.useState({ password: \\'\\' })\\n    const [formValid, setFormValid] = React.useState(false)\\n    const generatePassword = () => \\'123456\\'\\n    React.useEffect(() => {\\n      if (formRef.current) setFormValid(formRef.current.checkValidity())\\n    })\\n\\n    const handleChange = e => {\\n      const { name, value } = e.target\\n      setForm({ ...form, [name]: value })\\n    }\\n\\n    return (\\n      <form ref={formRef} onSubmit={e => e.preventDefault()}>\\n        <Label>New Password</Label>\\n        <UiInputPassword\\n          name=\\\"password\\\"\\n          label=\\\"Password\\\"\\n          onChange={handleChange}\\n          value={form.password}\\n          minLength={5}\\n          required\\n          onGeneratePassword={generatePassword}\\n        />\\n        <Button color=\\\"link\\\" type=\\\"submit\\\" disabled={!formValid}>\\n          Submit\\n        </Button>\\n      </form>\\n    )\\n  }\\n  return <PasswordExample />\\n}'} __scope={{\n      props: this ? this.props : props,\n      UiInputPassword,\n      Button,\n      Label,\n      Playground,\n      Props\n    }} mdxType=\"Playground\">\n  {() => {\n        const PasswordExample = () => {\n          const formRef = React.useRef();\n          const [form, setForm] = React.useState({\n            password: ''\n          });\n          const [formValid, setFormValid] = React.useState(false);\n\n          const generatePassword = () => '123456';\n\n          React.useEffect(() => {\n            if (formRef.current) setFormValid(formRef.current.checkValidity());\n          });\n\n          const handleChange = e => {\n            const {\n              name,\n              value\n            } = e.target;\n            setForm({ ...form,\n              [name]: value\n            });\n          };\n\n          return <form ref={formRef} onSubmit={e => e.preventDefault()}>\n      <Label mdxType=\"Label\">New Password</Label>\n      <UiInputPassword name=\"password\" label=\"Password\" onChange={handleChange} value={form.password} minLength={5} required onGeneratePassword={generatePassword} mdxType=\"UiInputPassword\" />\n      <Button color=\"link\" type=\"submit\" disabled={!formValid} mdxType=\"Button\">\n        Submit\n      </Button>\n    </form>;\n        };\n\n        return <PasswordExample mdxType=\"PasswordExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"ongeneratepassword\"\n    }}>{`onGeneratePassword`}</h2>\n    <p>{`The `}<strong parentName=\"p\">{`onGeneratePassword`}</strong>{` callback will be called to generate the new password and it will set the password and password confirmation with the results.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={UiInputPassword} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}