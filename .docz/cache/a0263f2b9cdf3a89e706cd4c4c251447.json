{"remainingRequest":"/Users/dusty/Code/parkbench/odin-web/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js!/Users/dusty/Code/parkbench/odin-web/src/utils/user-services.js","dependencies":[{"path":"/Users/dusty/Code/parkbench/odin-web/src/utils/user-services.js","mtime":1566253358862},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557854551322},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/thread-loader/dist/cjs.js","mtime":1565388327920},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js","mtime":1557854551208},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js","mtime":1555547971189}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:KGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZW50ZXJNb2R1bGUgOiB1bmRlZmluZWQ7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQuc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnOwppbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JzsKCnZhciBpc0Fzc2lnbmVkID0gZnVuY3Rpb24gaXNBc3NpZ25lZChzZXJ2aWNlTmFtZSkgewogIHZhciBhc3NpZ25lZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgdmFyIHVzZXJTZXJ2aWNlcyA9IGFzc2lnbmVkLnVzZXJTZXJ2aWNlcyB8fCBbXTsKICByZXR1cm4gdXNlclNlcnZpY2VzLmZpbmQoZnVuY3Rpb24gKHNlcnZpY2UpIHsKICAgIHJldHVybiBzZXJ2aWNlLnNlcnZpY2VOYW1lID09PSBzZXJ2aWNlTmFtZTsKICB9KTsKfTsKCnZhciBpc1ZpZXdhYmxlID0gZnVuY3Rpb24gaXNWaWV3YWJsZShzZXJ2aWNlTmFtZSkgewogIHZhciB2aWV3YWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgdmFyIGxvZ2luVHlwZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkOwogIGlmIChsb2dpblR5cGUgIT09ICdVc2VyJykgcmV0dXJuIHRydWU7CiAgdmFyIHZpZXdhYmxlU2VydmljZXMgPSB2aWV3YWJsZS51c2VyU2VydmljZXMgfHwgW107CiAgcmV0dXJuIHZpZXdhYmxlU2VydmljZXMuZmluZChmdW5jdGlvbiAoc2VydmljZSkgewogICAgcmV0dXJuIHNlcnZpY2Uuc2VydmljZU5hbWUgPT09IHNlcnZpY2VOYW1lOwogIH0pOwp9OwoKdmFyIGhhc1VzZXJTZXJ2aWNlID0gZnVuY3Rpb24gaGFzVXNlclNlcnZpY2Uoc2VydmljZSwgYXNzaWduZWQsIHZpZXdhYmxlLCBsb2dpblR5cGUpIHsKICB2YXIgc2VydmljZU5hbWUgPSBzZXJ2aWNlLnNlcnZpY2VOYW1lIHx8IHNlcnZpY2UubmFtZSB8fCBzZXJ2aWNlOwogIHJldHVybiBpc0Fzc2lnbmVkKHNlcnZpY2VOYW1lLCBhc3NpZ25lZCkgJiYgaXNWaWV3YWJsZShzZXJ2aWNlTmFtZSwgdmlld2FibGUsIGxvZ2luVHlwZSk7Cn07CgpleHBvcnQgdmFyIHVzZVVzZXJTZXJ2aWNlUGVybWlzc2lvbnMgPSBmdW5jdGlvbiB1c2VVc2VyU2VydmljZVBlcm1pc3Npb25zKHVzZXJJZCkgewogIHZhciBfdXNlU2VsZWN0b3IgPSB1c2VTZWxlY3RvcihmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHJldHVybiB7CiAgICAgIHNlc3Npb246IHN0YXRlLnNlc3Npb24sCiAgICAgIHVzZXJWaWV3YWJsZVNlcnZpY2VzOiBzdGF0ZS51c2VyVmlld2FibGVTZXJ2aWNlcywKICAgICAgdXNlckFzc2lnbmVkU2VydmljZXM6IHN0YXRlLnVzZXJBc3NpZ25lZFNlcnZpY2VzCiAgICB9OwogIH0pLAogICAgICBzZXNzaW9uID0gX3VzZVNlbGVjdG9yLnNlc3Npb24sCiAgICAgIHVzZXJWaWV3YWJsZVNlcnZpY2VzID0gX3VzZVNlbGVjdG9yLnVzZXJWaWV3YWJsZVNlcnZpY2VzLAogICAgICB1c2VyQXNzaWduZWRTZXJ2aWNlcyA9IF91c2VTZWxlY3Rvci51c2VyQXNzaWduZWRTZXJ2aWNlczsKCiAgcmV0dXJuIHsKICAgIHVzZXJWaWV3YWJsZVNlcnZpY2VzOiB1c2VNZW1vKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHNlc3Npb24ubG9naW5UeXBlICE9PSAnVXNlcicgPyB1c2VyQXNzaWduZWRTZXJ2aWNlc1t1c2VySWRdIDogdXNlclZpZXdhYmxlU2VydmljZXNbdXNlcklkXTsKICAgIH0sIFtzZXNzaW9uLmxvZ2luVHlwZSwgdXNlckFzc2lnbmVkU2VydmljZXMsIHVzZXJJZCwgdXNlclZpZXdhYmxlU2VydmljZXNdKSwKICAgIC8vIGNhbiBwYXNzIGluIGEgc2luZ2xlIHVzZXIgc2VydmljZSBvciBhbiBhcnJheSBvZiB1c2VyIHNlcnZpY2VzCiAgICAvLyBvbiBhbiBhcnJheSB3aWxsIHJldHVybiB0cnVlIGlmIG9uZSBpcyB2YWxpZAogICAgLy8gZWc6IFsnU2hhcmVkIENhbGwgQXBwZWFyYW5jZScsICdTaGFyZWQgQ2FsbCBBcHBlYXJhbmNlIDUnLCAuLi5dCiAgICBoYXNVc2VyU2VydmljZTogdXNlQ2FsbGJhY2soZnVuY3Rpb24gKHNlcnZpY2UpIHsKICAgICAgdmFyIHNlcnZpY2VzID0gW3NlcnZpY2VdLmZsYXQoKTsKICAgICAgcmV0dXJuIHNlcnZpY2VzLmZpbmQoZnVuY3Rpb24gKF9zZXJ2aWNlKSB7CiAgICAgICAgcmV0dXJuIGhhc1VzZXJTZXJ2aWNlKF9zZXJ2aWNlLCB1c2VyQXNzaWduZWRTZXJ2aWNlc1t1c2VySWRdLCB1c2VyVmlld2FibGVTZXJ2aWNlc1t1c2VySWRdLCBzZXNzaW9uLmxvZ2luVHlwZSk7CiAgICAgIH0pOwogICAgfSwgW3Nlc3Npb24ubG9naW5UeXBlLCB1c2VyQXNzaWduZWRTZXJ2aWNlcywgdXNlcklkLCB1c2VyVmlld2FibGVTZXJ2aWNlc10pCiAgfTsKfTsKCl9fc2lnbmF0dXJlX18odXNlVXNlclNlcnZpY2VQZXJtaXNzaW9ucywgInVzZVNlbGVjdG9ye3sgc2Vzc2lvbiwgdXNlclZpZXdhYmxlU2VydmljZXMsIHVzZXJBc3NpZ25lZFNlcnZpY2VzIH19XG51c2VNZW1ve31cbnVzZUNhbGxiYWNre30iLCBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIFt1c2VTZWxlY3Rvcl07Cn0pOwoKaWYgKHR5cGVvZiB1c2VVc2VyU2VydmljZVBlcm1pc3Npb25zICE9PSAndW5kZWZpbmVkJyAmJiB1c2VVc2VyU2VydmljZVBlcm1pc3Npb25zICYmIHVzZVVzZXJTZXJ2aWNlUGVybWlzc2lvbnMgPT09IE9iamVjdCh1c2VVc2VyU2VydmljZVBlcm1pc3Npb25zKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKHVzZVVzZXJTZXJ2aWNlUGVybWlzc2lvbnMpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHVzZVVzZXJTZXJ2aWNlUGVybWlzc2lvbnMsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJ1c2VVc2VyU2VydmljZVBlcm1pc3Npb25zIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvdXRpbHMvdXNlci1zZXJ2aWNlcy5qcyIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdCA6IHVuZGVmaW5lZDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoaXNBc3NpZ25lZCwgImlzQXNzaWduZWQiLCAiL1VzZXJzL2R1c3R5L0NvZGUvcGFya2JlbmNoL29kaW4td2ViL3NyYy91dGlscy91c2VyLXNlcnZpY2VzLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoaXNWaWV3YWJsZSwgImlzVmlld2FibGUiLCAiL1VzZXJzL2R1c3R5L0NvZGUvcGFya2JlbmNoL29kaW4td2ViL3NyYy91dGlscy91c2VyLXNlcnZpY2VzLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoaGFzVXNlclNlcnZpY2UsICJoYXNVc2VyU2VydmljZSIsICIvVXNlcnMvZHVzdHkvQ29kZS9wYXJrYmVuY2gvb2Rpbi13ZWIvc3JjL3V0aWxzL3VzZXItc2VydmljZXMuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3Rlcih1c2VVc2VyU2VydmljZVBlcm1pc3Npb25zLCAidXNlVXNlclNlcnZpY2VQZXJtaXNzaW9ucyIsICIvVXNlcnMvZHVzdHkvQ29kZS9wYXJrYmVuY2gvb2Rpbi13ZWIvc3JjL3V0aWxzL3VzZXItc2VydmljZXMuanMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmxlYXZlTW9kdWxlIDogdW5kZWZpbmVkOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/Users/dusty/Code/parkbench/odin-web/src/utils/user-services.js"],"names":["useSelector","useCallback","useMemo","isAssigned","serviceName","assigned","userServices","find","service","isViewable","viewable","loginType","viewableServices","hasUserService","name","useUserServicePermissions","userId","state","session","userViewableServices","userAssignedServices","services","flat","_service"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAgC;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;AACjD,MAAMC,YAAY,GAAGD,QAAQ,CAACC,YAAT,IAAyB,EAA9C;AACA,SAAOA,YAAY,CAACC,IAAb,CAAkB,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACJ,WAAR,KAAwBA,WAA5B;AAAA,GAAzB,CAAP;AACD,CAHD;;AAKA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACL,WAAD,EAA2C;AAAA,MAA7BM,QAA6B,uEAAlB,EAAkB;AAAA,MAAdC,SAAc;AAC5D,MAAIA,SAAS,KAAK,MAAlB,EAA0B,OAAO,IAAP;AAC1B,MAAMC,gBAAgB,GAAGF,QAAQ,CAACJ,YAAT,IAAyB,EAAlD;AACA,SAAOM,gBAAgB,CAACL,IAAjB,CAAsB,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACJ,WAAR,KAAwBA,WAA5B;AAAA,GAA7B,CAAP;AACD,CAJD;;AAMA,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAACL,OAAD,EAAUH,QAAV,EAAoBK,QAApB,EAA8BC,SAA9B,EAA4C;AACjE,MAAMP,WAAW,GAAGI,OAAO,CAACJ,WAAR,IAAuBI,OAAO,CAACM,IAA/B,IAAuCN,OAA3D;AACA,SACEL,UAAU,CAACC,WAAD,EAAcC,QAAd,CAAV,IACAI,UAAU,CAACL,WAAD,EAAcM,QAAd,EAAwBC,SAAxB,CAFZ;AAID,CAND;;AAQA,OAAO,IAAMI,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,MAAM,EAAI;AAAA,qBACehB,WAAW,CACzE,UAAAiB,KAAK;AAAA,WAAK;AACRC,MAAAA,OAAO,EAAED,KAAK,CAACC,OADP;AAERC,MAAAA,oBAAoB,EAAEF,KAAK,CAACE,oBAFpB;AAGRC,MAAAA,oBAAoB,EAAEH,KAAK,CAACG;AAHpB,KAAL;AAAA,GADoE,CAD1B;AAAA,MACzCF,OADyC,gBACzCA,OADyC;AAAA,MAChCC,oBADgC,gBAChCA,oBADgC;AAAA,MACVC,oBADU,gBACVA,oBADU;;AAQjD,SAAO;AACLD,IAAAA,oBAAoB,EAAEjB,OAAO,CAAC,YAAM;AAClC,aAAOgB,OAAO,CAACP,SAAR,KAAsB,MAAtB,GACHS,oBAAoB,CAACJ,MAAD,CADjB,GAEHG,oBAAoB,CAACH,MAAD,CAFxB;AAGD,KAJ4B,EAI1B,CAACE,OAAO,CAACP,SAAT,EAAoBS,oBAApB,EAA0CJ,MAA1C,EAAkDG,oBAAlD,CAJ0B,CADxB;AAML;AACA;AACA;AACAN,IAAAA,cAAc,EAAEZ,WAAW,CACzB,UAAAO,OAAO,EAAI;AACT,UAAMa,QAAQ,GAAG,CAACb,OAAD,EAAUc,IAAV,EAAjB;AACA,aAAOD,QAAQ,CAACd,IAAT,CAAc,UAAAgB,QAAQ,EAAI;AAC/B,eAAOV,cAAc,CACnBU,QADmB,EAEnBH,oBAAoB,CAACJ,MAAD,CAFD,EAGnBG,oBAAoB,CAACH,MAAD,CAHD,EAInBE,OAAO,CAACP,SAJW,CAArB;AAMD,OAPM,CAAP;AAQD,KAXwB,EAYzB,CAACO,OAAO,CAACP,SAAT,EAAoBS,oBAApB,EAA0CJ,MAA1C,EAAkDG,oBAAlD,CAZyB;AATtB,GAAP;AAwBD,CAhCM;;cAAMJ,yB;UACqDf,W;;;;;;;;;;;;;;;;;;;;;;;0BApB5DG,U;0BAKAM,U;0BAMAI,c;0BAQOE,yB","sourcesContent":["import { useSelector } from 'react-redux'\nimport { useCallback, useMemo } from 'react'\n\nconst isAssigned = (serviceName, assigned = {}) => {\n  const userServices = assigned.userServices || []\n  return userServices.find(service => service.serviceName === serviceName)\n}\n\nconst isViewable = (serviceName, viewable = {}, loginType) => {\n  if (loginType !== 'User') return true\n  const viewableServices = viewable.userServices || []\n  return viewableServices.find(service => service.serviceName === serviceName)\n}\n\nconst hasUserService = (service, assigned, viewable, loginType) => {\n  const serviceName = service.serviceName || service.name || service\n  return (\n    isAssigned(serviceName, assigned) &&\n    isViewable(serviceName, viewable, loginType)\n  )\n}\n\nexport const useUserServicePermissions = userId => {\n  const { session, userViewableServices, userAssignedServices } = useSelector(\n    state => ({\n      session: state.session,\n      userViewableServices: state.userViewableServices,\n      userAssignedServices: state.userAssignedServices\n    })\n  )\n  return {\n    userViewableServices: useMemo(() => {\n      return session.loginType !== 'User'\n        ? userAssignedServices[userId]\n        : userViewableServices[userId]\n    }, [session.loginType, userAssignedServices, userId, userViewableServices]),\n    // can pass in a single user service or an array of user services\n    // on an array will return true if one is valid\n    // eg: ['Shared Call Appearance', 'Shared Call Appearance 5', ...]\n    hasUserService: useCallback(\n      service => {\n        const services = [service].flat()\n        return services.find(_service => {\n          return hasUserService(\n            _service,\n            userAssignedServices[userId],\n            userViewableServices[userId],\n            session.loginType\n          )\n        })\n      },\n      [session.loginType, userAssignedServices, userId, userViewableServices]\n    )\n  }\n}\n"]}]}