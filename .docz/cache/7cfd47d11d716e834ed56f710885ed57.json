{"remainingRequest":"/Users/dusty/Code/parkbench/odin-web/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js!/Users/dusty/Code/parkbench/odin-web/src/utils/routes.js","dependencies":[{"path":"/Users/dusty/Code/parkbench/odin-web/src/utils/routes.js","mtime":1558654264692},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557854551322},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/thread-loader/dist/cjs.js","mtime":1565388327920},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js","mtime":1557854551208},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js","mtime":1555547971189}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:KGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZW50ZXJNb2R1bGUgOiB1bmRlZmluZWQ7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQuc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gJ3F1ZXJ5LXN0cmluZyc7CmV4cG9ydCB2YXIgdXNlclR5cGVzID0gewogICdBdXRvIEF0dGVuZGFudCAtIFN0YW5kYXJkJzogJ2F1dG9BdHRlbmRhbnRzL2F1dG9BdHRlbmRhbnQnLAogICdBdXRvIEF0dGVuZGFudCAtIFZpZGVvJzogJ2F1dG9BdHRlbmRhbnRzL2F1dG9BdHRlbmRhbnQnLAogICdBdXRvIEF0dGVuZGFudCc6ICdhdXRvQXR0ZW5kYW50cy9hdXRvQXR0ZW5kYW50JywKICAnQnJvYWRXb3JrcyBBbnl3aGVyZSBQb3J0YWwnOiBudWxsLAogICdCcm9hZFdvcmtzIEFueXdoZXJlJzogbnVsbCwKICAnQ2FsbCBDZW50ZXIgLSBCYXNpYyc6ICdjYWxsQ2VudGVycy9jYWxsQ2VudGVyJywKICAnQ2FsbCBDZW50ZXIgLSBQcmVtaXVtJzogJ2NhbGxDZW50ZXJzL2NhbGxDZW50ZXInLAogICdDYWxsIENlbnRlciAtIFN0YW5kYXJkJzogJ2NhbGxDZW50ZXJzL2NhbGxDZW50ZXInLAogICdDYWxsIENlbnRlcic6ICdjYWxsQ2VudGVycy9jYWxsQ2VudGVyJywKICAnQ29sbGFib3JhdGUgQnJpZGdlJzogJ2NvbGxhYm9yYXRlL2JyaWRnZScsCiAgJ0ZpbmQtbWUvRm9sbG93LW1lJzogbnVsbCwKICAnRmxleGlibGUgU2VhdGluZyBIb3N0JzogbnVsbCwKICAnR3JvdXAgUGFnaW5nJzogJ3BhZ2luZy9ncm91cCcsCiAgJ0h1bnQgR3JvdXAnOiAnaHVudEdyb3Vwcy9odW50R3JvdXAnLAogICdJbnN0YW50IENvbmZlcmVuY2UgQnJpZGdlJzogbnVsbCwKICAnSW5zdGFudCBHcm91cCBDYWxsJzogbnVsbCwKICAnTWVldC1NZSBDb25mZXJlbmNlIEJyaWRnZSc6ICdtZWV0TWUvYnJpZGdlJywKICAnTWVldC1NZSBDb25mZXJlbmNpbmcnOiAnbWVldE1lL2JyaWRnZScsCiAgJ011c2ljIE9uIEhvbGQnOiBudWxsLAogICdOb3JtYWwnOiAndXNlcnMnLAogICdSb3V0ZSBQb2ludCc6IG51bGwsCiAgJ1ZvaWNlIE1lc3NhZ2luZyc6IG51bGwsCiAgJ1ZvaWNlWE1MJzogbnVsbAp9OwoKaWYgKHR5cGVvZiB1c2VyVHlwZXMgIT09ICd1bmRlZmluZWQnICYmIHVzZXJUeXBlcyAmJiB1c2VyVHlwZXMgPT09IE9iamVjdCh1c2VyVHlwZXMpICYmIE9iamVjdC5pc0V4dGVuc2libGUodXNlclR5cGVzKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh1c2VyVHlwZXMsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJ1c2VyVHlwZXMiLAogICAgICBmaWxlbmFtZTogInNyYy91dGlscy9yb3V0ZXMuanMiCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCB2YXIgdXNlclBhdGggPSBmdW5jdGlvbiB1c2VyUGF0aCh1c2VyLCB0eXBlKSB7CiAgdmFyIHVzZXJUeXBlID0gdHlwZSB8fCB1c2VyLnVzZXJUeXBlIHx8IHVzZXIuc2VydmljZVR5cGUgfHwgJ05vcm1hbCc7CiAgdmFyIHBhdGggPSB1c2VyVHlwZXNbdXNlclR5cGVdOwogIGlmICghcGF0aCkgcmV0dXJuOwoKICBpZiAocGF0aCA9PT0gJ3VzZXJzJykgewogICAgcmV0dXJuICIvdXNlcnMvIi5jb25jYXQodXNlci5zZXJ2aWNlUHJvdmlkZXJJZCwgIi8iKS5jb25jYXQodXNlci5ncm91cElkLCAiLyIpLmNvbmNhdCh1c2VyLnVzZXJJZCk7CiAgfSBlbHNlIHsKICAgIHJldHVybiAiL2dyb3Vwcy8iLmNvbmNhdCh1c2VyLnNlcnZpY2VQcm92aWRlcklkLCAiLyIpLmNvbmNhdCh1c2VyLmdyb3VwSWQsICIvIikuY29uY2F0KHBhdGgsICI/IikuY29uY2F0KHN0cmluZ2lmeSh7CiAgICAgIHNlcnZpY2VVc2VySWQ6IHVzZXIudXNlcklkCiAgICB9KSk7CiAgfQp9OwoKaWYgKHR5cGVvZiB1c2VyUGF0aCAhPT0gJ3VuZGVmaW5lZCcgJiYgdXNlclBhdGggJiYgdXNlclBhdGggPT09IE9iamVjdCh1c2VyUGF0aCkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZSh1c2VyUGF0aCkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkodXNlclBhdGgsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJ1c2VyUGF0aCIsCiAgICAgIGZpbGVuYW1lOiAic3JjL3V0aWxzL3JvdXRlcy5qcyIKICAgIH0KICB9KTsKfQoKZXhwb3J0IHZhciBncm91cFBhdGggPSBmdW5jdGlvbiBncm91cFBhdGgoZ3JvdXApIHsKICByZXR1cm4gIi9ncm91cHMvIi5jb25jYXQoZ3JvdXAuc2VydmljZVByb3ZpZGVySWQsICIvIikuY29uY2F0KGdyb3VwLmdyb3VwSWQpOwp9OwoKaWYgKHR5cGVvZiBncm91cFBhdGggIT09ICd1bmRlZmluZWQnICYmIGdyb3VwUGF0aCAmJiBncm91cFBhdGggPT09IE9iamVjdChncm91cFBhdGgpICYmIE9iamVjdC5pc0V4dGVuc2libGUoZ3JvdXBQYXRoKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShncm91cFBhdGgsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJncm91cFBhdGgiLAogICAgICBmaWxlbmFtZTogInNyYy91dGlscy9yb3V0ZXMuanMiCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCB2YXIgc2VydmljZVByb3ZpZGVyUGF0aCA9IGZ1bmN0aW9uIHNlcnZpY2VQcm92aWRlclBhdGgoc2VydmljZVByb3ZpZGVyKSB7CiAgcmV0dXJuICIvc2VydmljZVByb3ZpZGVycy8iLmNvbmNhdChzZXJ2aWNlUHJvdmlkZXIuc2VydmljZVByb3ZpZGVySWQpOwp9OwoKaWYgKHR5cGVvZiBzZXJ2aWNlUHJvdmlkZXJQYXRoICE9PSAndW5kZWZpbmVkJyAmJiBzZXJ2aWNlUHJvdmlkZXJQYXRoICYmIHNlcnZpY2VQcm92aWRlclBhdGggPT09IE9iamVjdChzZXJ2aWNlUHJvdmlkZXJQYXRoKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKHNlcnZpY2VQcm92aWRlclBhdGgpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlcnZpY2VQcm92aWRlclBhdGgsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJzZXJ2aWNlUHJvdmlkZXJQYXRoIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvdXRpbHMvcm91dGVzLmpzIgogICAgfQogIH0pOwp9Cgp2YXIgX2RlZmF1bHQgPSB7CiAgdXNlclR5cGVzOiB1c2VyVHlwZXMsCiAgdXNlclBhdGg6IHVzZXJQYXRoLAogIGdyb3VwUGF0aDogZ3JvdXBQYXRoLAogIHNlcnZpY2VQcm92aWRlclBhdGg6IHNlcnZpY2VQcm92aWRlclBhdGgKfTsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIF9kZWZhdWx0ICE9PSAndW5kZWZpbmVkJyAmJiBfZGVmYXVsdCAmJiBfZGVmYXVsdCA9PT0gT2JqZWN0KF9kZWZhdWx0KSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKF9kZWZhdWx0KSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfZGVmYXVsdCwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIl9kZWZhdWx0IiwKICAgICAgZmlsZW5hbWU6ICJzcmMvdXRpbHMvcm91dGVzLmpzIgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5kZWZhdWx0IDogdW5kZWZpbmVkOwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3Rlcih1c2VyVHlwZXMsICJ1c2VyVHlwZXMiLCAiL1VzZXJzL2R1c3R5L0NvZGUvcGFya2JlbmNoL29kaW4td2ViL3NyYy91dGlscy9yb3V0ZXMuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3Rlcih1c2VyUGF0aCwgInVzZXJQYXRoIiwgIi9Vc2Vycy9kdXN0eS9Db2RlL3BhcmtiZW5jaC9vZGluLXdlYi9zcmMvdXRpbHMvcm91dGVzLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoZ3JvdXBQYXRoLCAiZ3JvdXBQYXRoIiwgIi9Vc2Vycy9kdXN0eS9Db2RlL3BhcmtiZW5jaC9vZGluLXdlYi9zcmMvdXRpbHMvcm91dGVzLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoc2VydmljZVByb3ZpZGVyUGF0aCwgInNlcnZpY2VQcm92aWRlclBhdGgiLCAiL1VzZXJzL2R1c3R5L0NvZGUvcGFya2JlbmNoL29kaW4td2ViL3NyYy91dGlscy9yb3V0ZXMuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL1VzZXJzL2R1c3R5L0NvZGUvcGFya2JlbmNoL29kaW4td2ViL3NyYy91dGlscy9yb3V0ZXMuanMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmxlYXZlTW9kdWxlIDogdW5kZWZpbmVkOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/Users/dusty/Code/parkbench/odin-web/src/utils/routes.js"],"names":["stringify","userTypes","userPath","user","type","userType","serviceType","path","serviceProviderId","groupId","userId","serviceUserId","groupPath","group","serviceProviderPath","serviceProvider"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AAEA,OAAO,IAAMC,SAAS,GAAG;AACvB,+BAA6B,8BADN;AAEvB,4BAA0B,8BAFH;AAGvB,oBAAkB,8BAHK;AAIvB,gCAA8B,IAJP;AAKvB,yBAAuB,IALA;AAMvB,yBAAuB,wBANA;AAOvB,2BAAyB,wBAPF;AAQvB,4BAA0B,wBARH;AASvB,iBAAe,wBATQ;AAUvB,wBAAsB,oBAVC;AAWvB,uBAAqB,IAXE;AAYvB,2BAAyB,IAZF;AAavB,kBAAgB,cAbO;AAcvB,gBAAc,sBAdS;AAevB,+BAA6B,IAfN;AAgBvB,wBAAsB,IAhBC;AAiBvB,+BAA6B,eAjBN;AAkBvB,0BAAwB,eAlBD;AAmBvB,mBAAiB,IAnBM;AAoBvB,YAAU,OApBa;AAqBvB,iBAAe,IArBQ;AAsBvB,qBAAmB,IAtBI;AAuBvB,cAAY;AAvBW,CAAlB;;;;;;;;;;;;;AA0BP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,IAAP,EAAgB;AACtC,MAAMC,QAAQ,GAAGD,IAAI,IAAID,IAAI,CAACE,QAAb,IAAyBF,IAAI,CAACG,WAA9B,IAA6C,QAA9D;AACA,MAAMC,IAAI,GAAGN,SAAS,CAACI,QAAD,CAAtB;AACA,MAAI,CAACE,IAAL,EAAW;;AACX,MAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,4BAAiBJ,IAAI,CAACK,iBAAtB,cAA2CL,IAAI,CAACM,OAAhD,cAA2DN,IAAI,CAACO,MAAhE;AACD,GAFD,MAEO;AACL,6BAAkBP,IAAI,CAACK,iBAAvB,cACEL,IAAI,CAACM,OADP,cAEIF,IAFJ,cAEYP,SAAS,CAAC;AAAEW,MAAAA,aAAa,EAAER,IAAI,CAACO;AAAtB,KAAD,CAFrB;AAGD;AACF,CAXM;;;;;;;;;;;;;AAaP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAChC,2BAAkBA,KAAK,CAACL,iBAAxB,cAA6CK,KAAK,CAACJ,OAAnD;AACD,CAFM;;;;;;;;;;;;;AAIP,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,eAAe,EAAI;AACpD,qCAA4BA,eAAe,CAACP,iBAA5C;AACD,CAFM;;;;;;;;;;;;;eAIQ;AAAEP,EAAAA,SAAS,EAATA,SAAF;AAAaC,EAAAA,QAAQ,EAARA,QAAb;AAAuBU,EAAAA,SAAS,EAATA,SAAvB;AAAkCE,EAAAA,mBAAmB,EAAnBA;AAAlC,C;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA/Cab,S;0BA0BAC,Q;0BAaAU,S;0BAIAE,mB","sourcesContent":["import { stringify } from 'query-string'\n\nexport const userTypes = {\n  'Auto Attendant - Standard': 'autoAttendants/autoAttendant',\n  'Auto Attendant - Video': 'autoAttendants/autoAttendant',\n  'Auto Attendant': 'autoAttendants/autoAttendant',\n  'BroadWorks Anywhere Portal': null,\n  'BroadWorks Anywhere': null,\n  'Call Center - Basic': 'callCenters/callCenter',\n  'Call Center - Premium': 'callCenters/callCenter',\n  'Call Center - Standard': 'callCenters/callCenter',\n  'Call Center': 'callCenters/callCenter',\n  'Collaborate Bridge': 'collaborate/bridge',\n  'Find-me/Follow-me': null,\n  'Flexible Seating Host': null,\n  'Group Paging': 'paging/group',\n  'Hunt Group': 'huntGroups/huntGroup',\n  'Instant Conference Bridge': null,\n  'Instant Group Call': null,\n  'Meet-Me Conference Bridge': 'meetMe/bridge',\n  'Meet-Me Conferencing': 'meetMe/bridge',\n  'Music On Hold': null,\n  'Normal': 'users',\n  'Route Point': null,\n  'Voice Messaging': null,\n  'VoiceXML': null\n}\n\nexport const userPath = (user, type) => {\n  const userType = type || user.userType || user.serviceType || 'Normal'\n  const path = userTypes[userType]\n  if (!path) return\n  if (path === 'users') {\n    return `/users/${user.serviceProviderId}/${user.groupId}/${user.userId}`\n  } else {\n    return `/groups/${user.serviceProviderId}/${\n      user.groupId\n    }/${path}?${stringify({ serviceUserId: user.userId })}`\n  }\n}\n\nexport const groupPath = group => {\n  return `/groups/${group.serviceProviderId}/${group.groupId}`\n}\n\nexport const serviceProviderPath = serviceProvider => {\n  return `/serviceProviders/${serviceProvider.serviceProviderId}`\n}\n\nexport default { userTypes, userPath, groupPath, serviceProviderPath }\n"]}]}