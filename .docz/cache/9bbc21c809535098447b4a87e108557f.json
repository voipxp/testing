{"remainingRequest":"/Users/dusty/Code/parkbench/odin-web/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js!/Users/dusty/Code/parkbench/odin-web/src/utils/acl.js","dependencies":[{"path":"/Users/dusty/Code/parkbench/odin-web/src/utils/acl.js","mtime":1566253358861},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1557854551322},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/thread-loader/dist/cjs.js","mtime":1565388327920},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/babel-loader/lib/index.js","mtime":1557854551208},{"path":"/Users/dusty/Code/parkbench/odin-web/node_modules/source-map-loader/index.js","mtime":1555547971189}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:KGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZW50ZXJNb2R1bGUgOiB1bmRlZmluZWQ7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQuc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnOwppbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JzsKCnZhciBoYXNMZXZlbCA9IGZ1bmN0aW9uIGhhc0xldmVsKGxvZ2luVHlwZSwgcmVxdWlyZWRUeXBlKSB7CiAgdmFyIHR5cGVzID0gewogICAgJ1VzZXInOiAxLAogICAgJ0dyb3VwJzogMiwKICAgICdTZXJ2aWNlIFByb3ZpZGVyJzogMywKICAgICdSZXNlbGxlcic6IDQsCiAgICAnUHJvdmlzaW9uaW5nJzogNSwKICAgICdTeXN0ZW0nOiA2CiAgfTsKICB2YXIgdXNlciA9IHR5cGVzW2xvZ2luVHlwZV0gfHwgMDsKICB2YXIgcmVxdWlyZWQgPSB0eXBlc1tyZXF1aXJlZFR5cGVdIHx8IDEwOwogIHJldHVybiB1c2VyID49IHJlcXVpcmVkOwp9OwoKdmFyIGhhc1VzZXIgPSBmdW5jdGlvbiBoYXNVc2VyKHR5cGUpIHsKICByZXR1cm4gaGFzTGV2ZWwodHlwZSwgJ1VzZXInKTsKfTsKCnZhciBoYXNHcm91cCA9IGZ1bmN0aW9uIGhhc0dyb3VwKHR5cGUpIHsKICByZXR1cm4gaGFzTGV2ZWwodHlwZSwgJ0dyb3VwJyk7Cn07Cgp2YXIgaGFzU2VydmljZVByb3ZpZGVyID0gZnVuY3Rpb24gaGFzU2VydmljZVByb3ZpZGVyKHR5cGUpIHsKICByZXR1cm4gaGFzTGV2ZWwodHlwZSwgJ1NlcnZpY2UgUHJvdmlkZXInKTsKfTsKCnZhciBoYXNSZXNlbGxlciA9IGZ1bmN0aW9uIGhhc1Jlc2VsbGVyKHR5cGUpIHsKICByZXR1cm4gaGFzTGV2ZWwodHlwZSwgJ1Jlc2VsbGVyJyk7Cn07Cgp2YXIgaGFzUHJvdmlzaW9uaW5nID0gZnVuY3Rpb24gaGFzUHJvdmlzaW9uaW5nKHR5cGUpIHsKICByZXR1cm4gaGFzTGV2ZWwodHlwZSwgJ1Byb3Zpc2lvbmluZycpOwp9OwoKdmFyIGhhc1N5c3RlbSA9IGZ1bmN0aW9uIGhhc1N5c3RlbSh0eXBlKSB7CiAgcmV0dXJuIGhhc0xldmVsKHR5cGUsICdTeXN0ZW0nKTsKfTsKCnZhciBoYXNWZXJzaW9uID0gZnVuY3Rpb24gaGFzVmVyc2lvbihjdXJyZW50LCByZXF1aXJlZCkgewogIHZhciBjdXJyZW50VmVyc2lvbiA9IHBhcnNlRmxvYXQoY3VycmVudC5yZXBsYWNlKCdzcCcsICcuJykpOwogIHZhciByZXF1aXJlZFZlcnNpb24gPSBwYXJzZUZsb2F0KHJlcXVpcmVkLnJlcGxhY2UoJ3NwJywgJy4nKSk7CiAgcmV0dXJuIGN1cnJlbnRWZXJzaW9uID49IHJlcXVpcmVkVmVyc2lvbjsKfTsKCmV4cG9ydCB2YXIgdXNlQWNsID0gZnVuY3Rpb24gdXNlQWNsKCkgewogIHZhciBzZXNzaW9uID0gdXNlU2VsZWN0b3IoZnVuY3Rpb24gKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuc2Vzc2lvbjsKICB9KTsKICB2YXIgbG9naW5UeXBlID0gc2Vzc2lvbi5sb2dpblR5cGUsCiAgICAgIGlzUGFhc0FkbWluID0gc2Vzc2lvbi5pc1BhYXNBZG1pbiwKICAgICAgc29mdHdhcmVWZXJzaW9uID0gc2Vzc2lvbi5zb2Z0d2FyZVZlcnNpb247CiAgcmV0dXJuIHsKICAgIGlzTGV2ZWw6IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChsZXZlbCkgewogICAgICByZXR1cm4gbG9naW5UeXBlID09PSBsZXZlbDsKICAgIH0sIFtsb2dpblR5cGVdKSwKICAgIGlzUGFhc0FkbWluOiB1c2VDYWxsYmFjayhmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBpc1BhYXNBZG1pbjsKICAgIH0sIFtpc1BhYXNBZG1pbl0pLAogICAgaGFzTGV2ZWw6IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChsZXZlbCkgewogICAgICByZXR1cm4gaGFzTGV2ZWwobG9naW5UeXBlLCBsZXZlbCk7CiAgICB9LCBbbG9naW5UeXBlXSksCiAgICBoYXNVc2VyOiB1c2VDYWxsYmFjayhmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBoYXNVc2VyKGxvZ2luVHlwZSwgJ0dyb3VwJyk7CiAgICB9LCBbbG9naW5UeXBlXSksCiAgICBoYXNHcm91cDogdXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gaGFzR3JvdXAobG9naW5UeXBlLCAnR3JvdXAnKTsKICAgIH0sIFtsb2dpblR5cGVdKSwKICAgIGhhc1NlcnZpY2VQcm92aWRlcjogdXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gaGFzU2VydmljZVByb3ZpZGVyKGxvZ2luVHlwZSwgJ1NlcnZpY2VQcm92aWRlcicpOwogICAgfSwgW2xvZ2luVHlwZV0pLAogICAgaGFzUmVzZWxsZXI6IHVzZUNhbGxiYWNrKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGhhc1Jlc2VsbGVyKGxvZ2luVHlwZSwgJ1Jlc2VsbGVyJyk7CiAgICB9LCBbbG9naW5UeXBlXSksCiAgICBoYXNQcm92aXNpb25pbmc6IHVzZUNhbGxiYWNrKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGhhc1Byb3Zpc2lvbmluZyhsb2dpblR5cGUsICdQcm92aXNpb25pbmcnKTsKICAgIH0sIFtsb2dpblR5cGVdKSwKICAgIGhhc1N5c3RlbTogdXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gaGFzU3lzdGVtKGxvZ2luVHlwZSwgJ1N5c3RlbScpOwogICAgfSwgW2xvZ2luVHlwZV0pLAogICAgaGFzVmVyc2lvbjogdXNlQ2FsbGJhY2soZnVuY3Rpb24gKHZlcnNpb24pIHsKICAgICAgcmV0dXJuIGhhc1ZlcnNpb24oc29mdHdhcmVWZXJzaW9uLCB2ZXJzaW9uKTsKICAgIH0sIFtzb2Z0d2FyZVZlcnNpb25dKQogIH07Cn07CgpfX3NpZ25hdHVyZV9fKHVzZUFjbCwgInVzZVNlbGVjdG9ye3Nlc3Npb259XG51c2VDYWxsYmFja3t9XG51c2VDYWxsYmFja3t9XG51c2VDYWxsYmFja3t9XG51c2VDYWxsYmFja3t9XG51c2VDYWxsYmFja3t9XG51c2VDYWxsYmFja3t9XG51c2VDYWxsYmFja3t9XG51c2VDYWxsYmFja3t9XG51c2VDYWxsYmFja3t9XG51c2VDYWxsYmFja3t9IiwgZnVuY3Rpb24gKCkgewogIHJldHVybiBbdXNlU2VsZWN0b3JdOwp9KTsKCmlmICh0eXBlb2YgdXNlQWNsICE9PSAndW5kZWZpbmVkJyAmJiB1c2VBY2wgJiYgdXNlQWNsID09PSBPYmplY3QodXNlQWNsKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKHVzZUFjbCkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkodXNlQWNsLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAidXNlQWNsIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvdXRpbHMvYWNsLmpzIgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5kZWZhdWx0IDogdW5kZWZpbmVkOwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihoYXNMZXZlbCwgImhhc0xldmVsIiwgIi9Vc2Vycy9kdXN0eS9Db2RlL3BhcmtiZW5jaC9vZGluLXdlYi9zcmMvdXRpbHMvYWNsLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoaGFzVXNlciwgImhhc1VzZXIiLCAiL1VzZXJzL2R1c3R5L0NvZGUvcGFya2JlbmNoL29kaW4td2ViL3NyYy91dGlscy9hY2wuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihoYXNHcm91cCwgImhhc0dyb3VwIiwgIi9Vc2Vycy9kdXN0eS9Db2RlL3BhcmtiZW5jaC9vZGluLXdlYi9zcmMvdXRpbHMvYWNsLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoaGFzU2VydmljZVByb3ZpZGVyLCAiaGFzU2VydmljZVByb3ZpZGVyIiwgIi9Vc2Vycy9kdXN0eS9Db2RlL3BhcmtiZW5jaC9vZGluLXdlYi9zcmMvdXRpbHMvYWNsLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoaGFzUmVzZWxsZXIsICJoYXNSZXNlbGxlciIsICIvVXNlcnMvZHVzdHkvQ29kZS9wYXJrYmVuY2gvb2Rpbi13ZWIvc3JjL3V0aWxzL2FjbC5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGhhc1Byb3Zpc2lvbmluZywgImhhc1Byb3Zpc2lvbmluZyIsICIvVXNlcnMvZHVzdHkvQ29kZS9wYXJrYmVuY2gvb2Rpbi13ZWIvc3JjL3V0aWxzL2FjbC5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGhhc1N5c3RlbSwgImhhc1N5c3RlbSIsICIvVXNlcnMvZHVzdHkvQ29kZS9wYXJrYmVuY2gvb2Rpbi13ZWIvc3JjL3V0aWxzL2FjbC5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGhhc1ZlcnNpb24sICJoYXNWZXJzaW9uIiwgIi9Vc2Vycy9kdXN0eS9Db2RlL3BhcmtiZW5jaC9vZGluLXdlYi9zcmMvdXRpbHMvYWNsLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIodXNlQWNsLCAidXNlQWNsIiwgIi9Vc2Vycy9kdXN0eS9Db2RlL3BhcmtiZW5jaC9vZGluLXdlYi9zcmMvdXRpbHMvYWNsLmpzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5sZWF2ZU1vZHVsZSA6IHVuZGVmaW5lZDsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/dusty/Code/parkbench/odin-web/src/utils/acl.js"],"names":["useSelector","useCallback","hasLevel","loginType","requiredType","types","user","required","hasUser","type","hasGroup","hasServiceProvider","hasReseller","hasProvisioning","hasSystem","hasVersion","current","currentVersion","parseFloat","replace","requiredVersion","useAcl","session","state","isPaasAdmin","softwareVersion","isLevel","level","version"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux'\nimport { useCallback } from 'react'\n\nconst hasLevel = (loginType, requiredType) => {\n  const types = {\n    'User': 1,\n    'Group': 2,\n    'Service Provider': 3,\n    'Reseller': 4,\n    'Provisioning': 5,\n    'System': 6\n  }\n  const user = types[loginType] || 0\n  const required = types[requiredType] || 10\n  return user >= required\n}\n\nconst hasUser = type => hasLevel(type, 'User')\nconst hasGroup = type => hasLevel(type, 'Group')\nconst hasServiceProvider = type => hasLevel(type, 'Service Provider')\nconst hasReseller = type => hasLevel(type, 'Reseller')\nconst hasProvisioning = type => hasLevel(type, 'Provisioning')\nconst hasSystem = type => hasLevel(type, 'System')\n\nconst hasVersion = (current, required) => {\n  const currentVersion = parseFloat(current.replace('sp', '.'))\n  const requiredVersion = parseFloat(required.replace('sp', '.'))\n  return currentVersion >= requiredVersion\n}\n\nexport const useAcl = () => {\n  const session = useSelector(state => state.session)\n  const { loginType, isPaasAdmin, softwareVersion } = session\n  return {\n    isLevel: useCallback(level => loginType === level, [loginType]),\n    isPaasAdmin: useCallback(() => isPaasAdmin, [isPaasAdmin]),\n    hasLevel: useCallback(level => hasLevel(loginType, level), [loginType]),\n    hasUser: useCallback(() => hasUser(loginType, 'Group'), [loginType]),\n    hasGroup: useCallback(() => hasGroup(loginType, 'Group'), [loginType]),\n    hasServiceProvider: useCallback(\n      () => hasServiceProvider(loginType, 'ServiceProvider'),\n      [loginType]\n    ),\n    hasReseller: useCallback(() => hasReseller(loginType, 'Reseller'), [\n      loginType\n    ]),\n    hasProvisioning: useCallback(\n      () => hasProvisioning(loginType, 'Provisioning'),\n      [loginType]\n    ),\n    hasSystem: useCallback(() => hasSystem(loginType, 'System'), [loginType]),\n    hasVersion: useCallback(version => hasVersion(softwareVersion, version), [\n      softwareVersion\n    ])\n  }\n}\n"]}]}